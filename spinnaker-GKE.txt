Continuous Delivery Pipelines with Spinnaker and Kubernetes Engine
https://cloud.google.com/solutions/continuous-delivery-spinnaker-kubernetes-engine

Creating a CD delivery pipeline using Kubernetes engine, cloud source repositories, container builder, resource manager, and spinnaker. 

With Kubernetes Engine and Spinnaker, you can create a robust continuous delivery flow that helps to ensure your software is shipped as quickly as it is developed and validated.

Developer > container builder > spinnaker

Objectives
Set up your environment by launching Cloud Shell, creating a Kubernetes Engine cluster, and configuring your identity and user management scheme.
Download a sample application, create a Git repository, and upload it to a Cloud Source Repository.
Deploy Spinnaker to Kubernetes Engine using Helm.
Build your Docker image.
Create triggers to create Docker images when your application changes.
Configure a Spinnaker pipeline to reliably and continuously deploy your application to Kubernetes Engine.
Deploy a code change, triggering the pipeline, and watch it roll out to production.

Includes costs for k8s engine, cloud load balancer, container builder, and resource manager. 

Start a Cloud Shell instance and create a Kubernetes Engine cluster
- Open cloud shell
- cloud config set compute/zone us-central1-f
- gcloud container clusters create spinnaker-tutorial \
      --machine-type=n1-standard-2

Configure identity and access management
- gcloud iam service-accounts create  spinnaker-storage-account \
    --display-name spinnaker-storage-account
- export SA_EMAIL=$(gcloud iam service-accounts list \
    --filter="displayName:spinnaker-storage-account" \
    --format='value(email)')
export PROJECT=$(gcloud info --format='value(config.project)')
- gcloud projects add-iam-policy-binding \
    $PROJECT --role roles/storage.admin --member serviceAccount:$SA_EMAIL
- gcloud iam service-accounts keys create spinnaker-sa.json --iam-account $SA_EMAIL